name: King of Tokyo

on: [push]  

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      # - name: Restore tools
      #   run: dotnet tool restore --tool-manifest .config/dotnet-tools.json
      # - name: Build
      #   run: dotnet build
      # - name: Check format issues
      #   run: dotnet format --verify-no-changes -v d
      # - name: Run tests
      #   run: dotnet test -l html --collect:"XPlat Code Coverage" --results-directory "TestResults-${{ matrix.dotnet-version }}"
      # - name: Upload test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-results-${{ matrix.dotnet-version }}
      #     path: TestResults-${{ matrix.dotnet-version }}
      #   # Use always() to always run this step to publish test results when there are test failures
      #   if: ${{ always() }}
      # - name: Generate code coverage report
      #   run: dotnet reportgenerator -reports:"TestResults-${{ matrix.dotnet-version }}/**/*.cobertura.xml" -targetdir:".coveragereport"
      # - name: Upload code coverage report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: code-coverage-${{ matrix.dotnet-version }}
      #     path: .coveragereport
      #   # Use always() to always run this step to publish test results when there are test failures
      #   if: ${{ always() }}
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag kot-image
        # Log in to Docker Hub
      - name: Login to Docker Hub
        run: docker login -u jorgechce -p ${{ secrets.DOCKER_HUB_TOKEN }}

        # Set unsecure commands to true
      - name: Set unsecure commands to true
        id: ACTIONS_ALLOW_UNSECURE_COMMANDS
        run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV

        # Set variables
      - name: Sets variables
        run: |
          echo ::set-env name=MASTER_VERSION::$(($GITHUB_RUN_ID/100))
          echo ::set-env name=LESSER_VERSION::$(($GITHUB_RUN_ID%100))
          
        # Tag the Docker image
      - name: Tag the Docker image
        run: docker tag kot-image:latest jorgechce/king-of-tokyo/kot-image:v$MASTER_VERSION.$LESSER_VERSION

        # Push the Docker image to Docker Hub
      - name: Push the Docker image
        run: |
        docker logout
        docker login
        docker push jorgechce/king-of-tokyo/kot-image:v$MASTER_VERSION.$LESSER_VERSION